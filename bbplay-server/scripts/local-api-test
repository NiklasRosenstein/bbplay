#!/usr/bin/env python3

import json
import requests
import sys
import traceback

BASE_URL = 'http://localhost:5000'

session = requests.Session()

def request(method, url, *args, auth=True, **kwargs):
  print()
  if not auth:
    kwargs.setdefault('headers', {})['Authorization'] = None
  request = session.request(method, BASE_URL + url, *args, **kwargs)
  try:
    request.raise_for_status()
    if request.status_code == 204:
      data = None
    else:
      data = request.json()
    print(method, url, json.dumps(data))
    if request.status_code // 100 not in (1, 2, 3):
      exit(1)
    return data
  except json.JSONDecodeError as exc:
    traceback.print_exc()
    print(request.content, file=sys.stderr)
    print(file=sys.stderr)
    print(method, url, file=sys.stderr)
    print(file=sys.stderr)
    exit(1)

token = request('POST', '/api/v1/auth', json={'username': 'admin', 'password': 'admin'})['token']
session.headers['Authorization'] = 'Bearer ' + token

playlist = request('PUT', '/api/v1/playlist', json={'name': 'Bushbash in the mix'})

# Try to put a track without auth header.
request('PUT', '/api/v1/playlist/' + playlist['id'] + '/tracks', auth=False, json={'videoId': 'HSsqzzuGTPo'})

track = request('PUT', '/api/v1/playlist/' + playlist['id'] + '/tracks', json={'videoId': 'HSsqzzuGTPo'})
vote = request('POST', '/api/v1/playlist/' + playlist['id'] + '/tracks/' + str(track['id']) + '/vote', json={'vote': 'up'})
assert request('DELETE', '/api/v1/playlist/' + playlist['id'] + '/tracks/' + str(track['id']) + '/vote', json={'vote': 'up'}) is None

now_playing = '/api/v1/playlist/' + playlist['id'] + '/tracks/now-playing'
request('PUT', now_playing, json={'trackId': track['id'], 'status': 'playing'})
assert request('GET', now_playing)['id'] == track['id']
request('PUT', now_playing, json={'trackId': track['id'], 'status': 'stopped'})
assert request('GET', now_playing) == None
